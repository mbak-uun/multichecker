
STRUKTUR DATA :
1. MULTICHECKER_ALL_GAS_FEES [
  {
    "chain": "polygon",
    "key": "POL",
    "symbol": "POL",
    "tokenPrice": 0.2324,
    "gwei": 2.36e-7,
    "gasUSD": 1.1517744000000002e-12
  },
  {
    "chain": "arbitrum",
    "key": "ETH",
    "symbol": "ETH",
    "tokenPrice": 4461.05,
    "gwei": 0.027574,
    "gasUSD": 0.0025831888467
  },
  {
    "chain": "ethereum",
    "key": "ETH",
    "symbol": "ETH",
    "tokenPrice": 4461.05,
    "gwei": 1.403708408,
    "gasUSD": 0.1315022812636764
  },
  {
    "chain": "bsc",
    "key": "BNB",
    "symbol": "BNB",
    "tokenPrice": 827.15,
    "gwei": 0,
    "gasUSD": 0
  },
  {
    "chain": "base",
    "key": "ETH",
    "symbol": "ETH",
    "tokenPrice": 4461.05,
    "gwei": 0.009202328,
    "gasUSD": 0.0008620929518124
  }
]

2. MULTICHECKER_HISTORY {
  "time": "09:28:37 | 15/08/2025",
  "action": "IMPORT DATA KOIN"
}

3. MULTICHECKER_SETTING_SCANNER {
  "nickname": "SADDAR",
  "jedaTimeGroup": 500,
  "jedaKoin": 500,
  "filterPNL": 2,
  "walletMeta": "0xDA90575Cd63269A951e225e47842d13b27Fb8Fe5",
  "scanPerKoin": 5,
  "speedScan": 2,
  "JedaCexs": {
    "GATE": 300,
    "BINANCE": 300,
    "MEXC": 300,
    "INDODAX": 300
  },
  "JedaDexs": {
    "kyberswap": 700,
    "0x": 700,
    "odos": 700,
    "okx": 700,
    "1inch": 700,
    "lifi": 700
  },
  "AllChains": [
    "polygon",
    "arbitrum",
    "ethereum",
    "bsc",
    "base"
  ]
}

4. TOKEN_SCANNER [
      {
        "id": "27",
        "no": 27,
        "symbol_in": "MDT",
        "symbol_out": "BNT",
        "chain": "ethereum",
        "sc_in": "0x814e0908b12A99FeCf5BC101bB5d0b8B5cDf7d26",
        "des_in": 18,
        "sc_out": "0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C",
        "des_out": 18,
        "dataCexs": {
            "GATE": {
                "feeWDToken": "36.77",
                "feeWDPair": "1.31",
                "depositToken": true,
                "withdrawToken": true,
                "depositPair": true,
                "withdrawPair": true
            },
            "BINANCE": {
                "feeWDToken": "49",
                "feeWDPair": "1.72",
                "depositToken": true,
                "withdrawToken": true,
                "depositPair": true,
                "withdrawPair": true
            }
        },
        "dataDexs": {
            "odos": {
                "left": 900,
                "right": 800
            },
            "okx": {
                "left": 1000,
                "right": 900
            },
            "lifi": {
                "left": 1200,
                "right": 1100
            }
        },
        "status": true,
        "selectedCexs": [
            "GATE",
            "BINANCE"
        ],
        "selectedDexs": [
            "odos",
            "okx"
        ]
    }},
  {
        "id": "15",
        "no": 15,
        "symbol_in": "ETC",
        "symbol_out": "UNI",
        "chain": "bsc",
        "sc_in": "0x3d6545b08693daE087E957cb1180ee38B9e3c25E",
        "des_in": 18,
        "sc_out": "0xBf5140A22578168FD562DCcF235E5D43A02ce9B1",
        "des_out": 18,
        "dataCexs": {
            "BINANCE": {
                "feeWDToken": "0.00079",
                "feeWDPair": "0.0017",
                "depositToken": true,
                "withdrawToken": true,
                "depositPair": true,
                "withdrawPair": true
            }
        },
        "dataDexs": {
            "1inch": {
                "left": 1000,
                "right": 1000
            },
            "odos": {
                "left": 500,
                "right": 500
            },
            "kyberswap": {
                "left": 400,
                "right": 400
            },
            "lifi": {
                "left": 300,
                "right": 300
            }
        },
        "status": true,
        "selectedCexs": [
            "BINANCE"
        ],
        "selectedDexs": [
            "1inch",
            "odos",
            "kyberswap"
        ]
    }
]

Fitur-Fitur Utama
Monitoring Multi-Aset: Memantau banyak pasangan token di berbagai CEX dan DEX secara bersamaan dengan modal untuk qoute DEX berbeda2.
Manajemen Token (CRUD): Fitur penuh untuk menambah, membaca, memperbarui, dan menghapus token yang akan dipantau.
Konfigurasi Detail: Pengguna bisa mengatur jeda waktu (delay) API per CEX dan per DEX, serta modal untuk setiap arah transaksi.
Impor/Ekspor Data: Mendukung backup dan restore data token via file CSV.
semua settingan kebutuhan app ada di file config.js
update wallet cex : memungkinan memeriksa status depo dan wd koin sesuai chain pada cex

Algoritma Pemindaian Final (Langkah-demi-Langkah)
Proses ini dimulai saat pengguna menekan tombol START.

Tahap 1: Inisialisasi dan Persiapan Data (startSCAN & flattenDataKoin)
Kunci Status "RUN": Aplikasi segera menyimpan status { run: 'YES' } ke localStorage. Ini mencegah pemindaian ganda dan memberitahu tab lain bahwa proses sedang berjalan. UI dinonaktifkan untuk mencegah perubahan konfigurasi selama pemindaian.

Pengambilan Konfigurasi: Semua pengaturan terbaru dari SETTING_SCANNER di localStorage dimuat ke dalam memori, termasuk jeda waktu, filter PNL, dan daftar Chain yang aktif.

"Perataan" Data Token (Langkah Paling Krusial): Ini adalah kunci untuk menangani skenario kompleks. Aplikasi tidak langsung menggunakan data TOKEN_SCANNER Anda. Sebaliknya, ia membuat daftar tugas baru yang "datar" (flatTokens) dengan logika berikut:

Ia akan mengulang setiap token dalam TOKEN_SCANNER.
Untuk setiap token, ia akan mengulang lagi daftar selectedCexs.
Hasilnya: Jika satu token memiliki 2 CEX terpilih, aplikasi akan membuat 2 tugas pemindaian terpisah dalam daftar flatTokens.
Contoh data Anda: Token MDT/BNT akan dipecah menjadi dua tugas: satu untuk GATE dan satu untuk BINANCE.
Setiap tugas dalam flatTokens berisi semua informasi yang dibutuhkan: satu CEX, satu pasangan token, dan daftar DEX yang relevan beserta modalnya masing-masing.
Pengurutan Tugas: Daftar tugas flatTokens yang baru dibuat ini diurutkan berdasarkan abjad nama token (A-Z atau Z-A, sesuai pilihan di UI) untuk memastikan urutan pemindaian yang konsisten.

Tahap 2: Orkestrasi Proses Pemindaian (processTokens)
Pembagian Grup: Daftar flatTokens dibagi menjadi beberapa grup. Jumlah token per grup ditentukan oleh pengaturan KOIN/GRUP di setting.

Loop Per Grup: Aplikasi mulai memproses grup demi grup.

Jeda Antar Grup: Setelah menyelesaikan satu grup, aplikasi akan berhenti sejenak sesuai pengaturan jedaTimeGroup (misalnya, 1500ms) sebelum melanjutkan ke grup berikutnya.
Update Data Pendukung: Di awal setiap grup, aplikasi memperbarui data penting seperti biaya gas (gas fee) untuk setiap chain dan kurs USDT/IDR.
Eksekusi Paralel dalam Grup: Token-token di dalam satu grup diproses secara bersamaan (paralel), hingga batas maksimum yang ditentukan oleh scanPerKoin.

Tahap 3: Eksekusi Tugas Inti (Per Pasangan Token-CEX)
Ini adalah proses yang terjadi untuk setiap tugas di dalam flatTokens. Mari kita gunakan contoh tugas MDT/BNT di CEX GATE.

Pengambilan Harga CEX (getPriceCEX):

Aplikasi mengirim permintaan API ke GATE untuk mendapatkan harga MDT/USDT dan BNT/USDT (menggunakan USDT sebagai mata uang jembatan).
Ia mengambil harga jual/beli dan volume dari order book.
Ia juga membaca data dataCexs dari TOKEN_SCANNER untuk mendapatkan biaya penarikan (WD) yang sudah dikonfigurasi untuk MDT dan BNT di GATE. Biaya ini dikonversi ke nilai Dolar.
Data harga dan volume CEX ini kemudian ditampilkan di kolom paling kiri dan kanan pada tabel UI.
Loop Per DEX: Setelah mendapatkan harga CEX, aplikasi akan mengulang daftar selectedDexs untuk token ini (contoh: ["odos", "okx"]).

Simulasi Per DEX (getPriceDEX): Untuk setiap DEX (misal, odos):

Baca Modal Spesifik: Aplikasi membaca modal dari dataDexs untuk odos, yaitu { "left": 900, "right": 800 }.
Jeda Per DEX: Aplikasi menunggu sejenak sesuai jeda yang diatur di setting untuk DEX tersebut.
Simulasi Arah KIRI (CEX → DEX): a. Kalkulasi Input: Menghitung berapa MDT yang bisa dibeli di GATE dengan modal $900. b. Permintaan Quote: Mengirim permintaan API ke odos untuk mensimulasikan penukaran (swap) sejumlah MDT tersebut menjadi BNT. c. Penanganan Respons: Jika berhasil, ia mendapatkan jumlah BNT yang akan diterima (amount_out) dan estimasi biaya swap (FeeSwap).
Simulasi Arah KANAN (DEX → CEX): a. Kalkulasi Input: Menghitung berapa BNT yang bisa dibeli di GATE dengan modal $800. b. Permintaan Quote: Mengirim permintaan API ke odos untuk mensimulasikan swap sejumlah BNT tersebut menjadi MDT. c. Penanganan Respons: Mendapatkan hasil amount_out MDT dan FeeSwap.
Penanganan Error dan Fallback: Jika API DEX (misalnya odos) mengembalikan error (seperti Insufficient liquidity atau Timeout), aplikasi akan menampilkan pesan error di UI. Untuk beberapa DEX dan jenis error tertentu (misalnya error 500 dari Odos), aplikasi memiliki mekanisme fallback dengan mencoba API lain (getPriceSWOOP) untuk mendapatkan harga alternatif.
Kalkulasi PNL dan Update UI (ResultEksekusi & DisplayPNL):

Segera setelah hasil dari simulasi DEX diterima (baik KIRI maupun KANAN), fungsi ini dipanggil.
Menghitung Nilai Akhir: Jumlah token output (amount_out) dikonversi ke nilai Dolar menggunakan harga CEX yang didapat di langkah 1. (Contoh: jumlah_BNT_diterima * harga_BNT/USDT_di_GATE).
Menghitung Biaya Total: Biaya Total = Biaya WD CEX + Biaya Trading CEX (0.14%) + Biaya Swap DEX.
Menghitung PNL: PNL = (Nilai Akhir dalam Dolar) - (Modal Awal + Biaya Total).
Update UI: Sel yang sesuai di tabel diperbarui dengan harga swap dari DEX dan hasil PNL.
Sinyal: Jika PNL positif dan melebihi filter, sel diwarnai hijau, suara diputar, dan notifikasi Telegram dikirim.
Proses pada Tahap 3 ini diulang untuk setiap DEX (okx, dst.) dan kemudian untuk setiap tugas lain dalam flatTokens (misalnya, tugas MDT/BNT di BINANCE).

Tahap 4: Penyelesaian
Setelah semua tugas dalam flatTokens selesai diproses, aplikasi akan mengubah status kembali ke { run: 'NO' }, mengaktifkan kembali UI, dan menampilkan status "SELESAI" pada progress bar.

Semoga penjelasan super mendetail ini memberikan gambaran paling lengkap mengenai cara kerja algoritma pemindaiannya.
